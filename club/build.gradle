buildscript {
    ext {
        queryDslVersion = "4.4.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'     //QUERYDSL 추가1
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "11"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.0'

    //implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5'

    //security 관련 thymeleaf 확장 플러그인 2개
    implementation  'org.springframework.boot:spring-boot-starter-security'
    implementation  'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    //구글 로그인 연동
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //JWT 토큰 생성/검증 라이브러리 3개
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'

    implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time'

    //test lombok
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'


// QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor(
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

    //Thumbnailator 추가
    implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.12'
}

test {
    useJUnitPlatform()
}

//querydsl 추가
def querydslDir = "$buildDir/generated/querydsl"

querydsl{
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {

    //main.java.srcDir querydslDir   아래 코드가 잘 됨

    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}

configurations {
    querydsl.extendsFrom compileClasspath
}


compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}


/** * comileQuerydsl.doFirst 추가 */
compileQuerydsl.doFirst {
    if(file(querydslDir).exists() )
        delete(file(querydslDir))
}
targetCompatibility = JavaVersion.VERSION_11
